// This file was autogenerated by some hot garbage in the
// `uniffi-bindgen-react-native` crate. Trust me, you don't want to mess with
// it!
#pragma once
#include "UniffiCallInvoker.h"
#include <ReactCommon/CallInvoker.h>
#include <iostream>
#include <jsi/jsi.h>
#include <map>
#include <memory>

namespace react = facebook::react;
namespace jsi = facebook::jsi;

class NativeLwk : public jsi::HostObject {
private:
  // For calling back into JS from Rust.
  std::shared_ptr<uniffi_runtime::UniffiCallInvoker> callInvoker;

protected:
  std::map<std::string, jsi::Value> props;
  jsi::Value cpp_uniffi_internal_fn_func_ffi__string_to_byte_length(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_func_ffi__string_to_arraybuffer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_func_ffi__arraybuffer_to_string(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_address(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_address(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_address_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_is_blinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_qr_code_text(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_qr_code_uri(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_to_unconfidential(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_address_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_addressresult(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_addressresult(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_addressresult_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_addressresult_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_amp2(jsi::Runtime &rt,
                                          const jsi::Value &thisVal,
                                          const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_amp2(jsi::Runtime &rt,
                                         const jsi::Value &thisVal,
                                         const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_amp2_new_testnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_amp2_cosign(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_amp2_descriptor_from_str(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_amp2_register(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_amp2descriptor(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_amp2descriptor(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_amp2descriptor_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_amp2descriptor_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_bip(jsi::Runtime &rt,
                                         const jsi::Value &thisVal,
                                         const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_bip(jsi::Runtime &rt,
                                        const jsi::Value &thisVal,
                                        const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_bip_new_bip49(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_bip_new_bip84(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_bip_new_bip87(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_contract(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_contract(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_contract_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_contract_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_electrumclient(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_electrumclient(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_electrumclient_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_electrumclient_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_electrumclient_full_scan(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_electrumclient_full_scan_to_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_electrumclient_ping(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_esploraclient(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_esploraclient(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_esploraclient_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_esploraclient_new_waterfalls(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_esploraclient_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_esploraclient_full_scan(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_esploraclient_full_scan_to_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_foreignpersister(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_foreignpersister(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_foreignpersister_get(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_foreignpersister_push(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_foreignpersisterlink(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_foreignpersisterlink(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_foreignpersisterlink_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_issuance(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_issuance(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_asset(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_is_issuance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_is_reissuance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_prev_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_prev_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_issuance_token(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_mnemonic(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_mnemonic(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_mnemonic_from_entropy(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_mnemonic_from_random(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_mnemonic_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_mnemonic_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_network(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_network(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_network_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_network_regtest(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_network_regtest_default(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_network_testnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_default_electrum_client(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_default_esplora_client(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_is_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_policy_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_tx_builder(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_network_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_outpoint(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_outpoint(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_outpoint_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_outpoint_txid(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_outpoint_vout(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_outpoint_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_precision(jsi::Runtime &rt,
                                               const jsi::Value &thisVal,
                                               const jsi::Value *args,
                                               size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_precision(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_precision_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_precision_sats_to_string(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_precision_string_to_sats(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_pset(jsi::Runtime &rt,
                                          const jsi::Value &thisVal,
                                          const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_pset(jsi::Runtime &rt,
                                         const jsi::Value &thisVal,
                                         const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_pset_new(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_pset_extract_tx(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_pset_finalize(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_pset_inputs(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_pset_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_psetbalance(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_psetbalance(jsi::Runtime &rt,
                                                const jsi::Value &thisVal,
                                                const jsi::Value *args,
                                                size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetbalance_balances(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetbalance_fee(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetbalance_recipients(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_psetdetails(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_psetdetails(jsi::Runtime &rt,
                                                const jsi::Value &thisVal,
                                                const jsi::Value *args,
                                                size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetdetails_balance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetdetails_inputs_issuances(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetdetails_signatures(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_psetinput(jsi::Runtime &rt,
                                               const jsi::Value &thisVal,
                                               const jsi::Value *args,
                                               size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_psetinput(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_issuance_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_issuance_token(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_previous_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_previous_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_previous_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetinput_redeem_script(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_psetsignatures(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_psetsignatures(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetsignatures_has_signature(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_psetsignatures_missing_signature(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_recipient(jsi::Runtime &rt,
                                               const jsi::Value &thisVal,
                                               const jsi::Value *args,
                                               size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_recipient(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_recipient_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_recipient_asset(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_recipient_value(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_recipient_vout(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_script(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_script(jsi::Runtime &rt,
                                           const jsi::Value &thisVal,
                                           const jsi::Value *args,
                                           size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_script_new(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_script_asm(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_script_bytes(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_script_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_secretkey(jsi::Runtime &rt,
                                               const jsi::Value &thisVal,
                                               const jsi::Value *args,
                                               size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_secretkey(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_secretkey_from_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_secretkey_bytes(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_signer(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_signer(jsi::Runtime &rt,
                                           const jsi::Value &thisVal,
                                           const jsi::Value *args,
                                           size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_signer_new(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_signer_random(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_signer_keyorigin_xpub(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_signer_mnemonic(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_signer_sign(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_signer_wpkh_slip77_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_testenv(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_testenv(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_testenv_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_electrum_url(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_generate(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_get_new_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_height(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_issue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_testenv_send_to_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_transaction(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_transaction(jsi::Runtime &rt,
                                                const jsi::Value &thisVal,
                                                const jsi::Value *args,
                                                size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_transaction_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_fee(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_inputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_outputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_transaction_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_txbuilder(jsi::Runtime &rt,
                                               const jsi::Value &thisVal,
                                               const jsi::Value *args,
                                               size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_txbuilder(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_txbuilder_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_add_burn(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_add_lbtc_recipient(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_add_recipient(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_drain_lbtc_to(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_drain_lbtc_wallet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_fee_rate(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_finish(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_issue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_reissue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_set_wallet_utxos(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txbuilder_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_txin(jsi::Runtime &rt,
                                          const jsi::Value &thisVal,
                                          const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_txin(jsi::Runtime &rt,
                                         const jsi::Value &thisVal,
                                         const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txin_outpoint(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_txout(jsi::Runtime &rt,
                                           const jsi::Value &thisVal,
                                           const jsi::Value *args,
                                           size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_txout(jsi::Runtime &rt,
                                          const jsi::Value &thisVal,
                                          const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_asset(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_is_fee(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_is_partially_blinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_unblind(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txout_value(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_txoutsecrets(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_txoutsecrets(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txoutsecrets_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txoutsecrets_asset_bf(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txoutsecrets_value(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txoutsecrets_value_bf(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_txid(jsi::Runtime &rt,
                                          const jsi::Value &thisVal,
                                          const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_txid(jsi::Runtime &rt,
                                         const jsi::Value &thisVal,
                                         const jsi::Value *args, size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_txid_new(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txid_bytes(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_txid_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_update(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_update(jsi::Runtime &rt,
                                           const jsi::Value &thisVal,
                                           const jsi::Value *args,
                                           size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_update_new(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_update_only_tip(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_update_serialize(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_wallettx(jsi::Runtime &rt,
                                              const jsi::Value &thisVal,
                                              const jsi::Value *args,
                                              size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_wallettx(jsi::Runtime &rt,
                                             const jsi::Value &thisVal,
                                             const jsi::Value *args,
                                             size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_balance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_fee(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_height(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_inputs(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_outputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_timestamp(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_tx(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_txid(jsi::Runtime &rt,
                                                    const jsi::Value &thisVal,
                                                    const jsi::Value *args,
                                                    size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_type_(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettx_unblinded_url(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_wallettxout(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_wallettxout(jsi::Runtime &rt,
                                                const jsi::Value &thisVal,
                                                const jsi::Value *args,
                                                size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_ext_int(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_height(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_outpoint(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_unblinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wallettxout_wildcard_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_wollet(jsi::Runtime &rt,
                                            const jsi::Value &thisVal,
                                            const jsi::Value *args,
                                            size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_wollet(jsi::Runtime &rt,
                                           const jsi::Value &thisVal,
                                           const jsi::Value *args,
                                           size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_wollet_new(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_wollet_with_custom_persister(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_address(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_apply_update(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_balance(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_finalize(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_pset_details(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_transactions(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_txos(jsi::Runtime &rt,
                                                  const jsi::Value &thisVal,
                                                  const jsi::Value *args,
                                                  size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_utxos(jsi::Runtime &rt,
                                                   const jsi::Value &thisVal,
                                                   const jsi::Value *args,
                                                   size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wollet_wait_for_tx(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_clone_wolletdescriptor(jsi::Runtime &rt,
                                                      const jsi::Value &thisVal,
                                                      const jsi::Value *args,
                                                      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_free_wolletdescriptor(jsi::Runtime &rt,
                                                     const jsi::Value &thisVal,
                                                     const jsi::Value *args,
                                                     size_t count);
  jsi::Value cpp_uniffi_lwk_fn_constructor_wolletdescriptor_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wolletdescriptor_derive_blinding_key(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wolletdescriptor_is_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wolletdescriptor_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_method_wolletdescriptor_uniffi_trait_display(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_fn_func_is_provably_segwit(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_func_is_provably_segwit(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_address_is_blinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_address_qr_code_text(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_address_qr_code_uri(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_address_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_address_to_unconfidential(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_addressresult_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_addressresult_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_amp2_cosign(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_amp2_descriptor_from_str(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_amp2_register(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_amp2descriptor_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_electrumclient_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_electrumclient_full_scan(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_electrumclient_full_scan_to_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_electrumclient_ping(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_esploraclient_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_esploraclient_full_scan(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_esploraclient_full_scan_to_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_foreignpersister_get(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_foreignpersister_push(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_is_issuance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_is_reissuance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_prev_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_prev_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_issuance_token(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_network_default_electrum_client(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_network_default_esplora_client(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_network_is_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_network_policy_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_network_tx_builder(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_outpoint_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_outpoint_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_precision_sats_to_string(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_precision_string_to_sats(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_pset_extract_tx(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_pset_finalize(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_pset_inputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetbalance_balances(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetbalance_fee(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetbalance_recipients(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetdetails_balance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetdetails_inputs_issuances(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetdetails_signatures(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_issuance_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_issuance_token(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_previous_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_previous_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_previous_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetinput_redeem_script(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetsignatures_has_signature(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_psetsignatures_missing_signature(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_recipient_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_recipient_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_recipient_value(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_recipient_vout(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_script_asm(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_script_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_secretkey_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_signer_keyorigin_xpub(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_signer_mnemonic(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_signer_sign(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_signer_wpkh_slip77_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_electrum_url(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_generate(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_get_new_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_height(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_issue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_testenv_send_to_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_transaction_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_transaction_fee(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_transaction_inputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_transaction_outputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_transaction_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_add_burn(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_add_lbtc_recipient(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_add_recipient(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_drain_lbtc_to(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_drain_lbtc_wallet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_fee_rate(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_finish(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_issue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_reissue_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txbuilder_set_wallet_utxos(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txin_outpoint(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_is_fee(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_is_partially_blinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_unblind(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txout_value(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txoutsecrets_asset(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txoutsecrets_asset_bf(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txoutsecrets_value(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txoutsecrets_value_bf(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_txid_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_update_only_tip(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_update_serialize(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_balance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_fee(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_height(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_inputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_outputs(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_timestamp(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_tx(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_txid(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_type_(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettx_unblinded_url(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_ext_int(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_height(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_outpoint(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_unblinded(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wallettxout_wildcard_index(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_address(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_apply_update(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_balance(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_descriptor(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_finalize(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_pset_details(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_transactions(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_txos(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_utxos(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wollet_wait_for_tx(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_lwk_checksum_method_wolletdescriptor_derive_blinding_key(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wolletdescriptor_is_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_method_wolletdescriptor_script_pubkey(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_address_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_amp2_new_testnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_bip_new_bip49(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_bip_new_bip84(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_bip_new_bip87(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_contract_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_electrumclient_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_esploraclient_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_esploraclient_new_waterfalls(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_foreignpersisterlink_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_mnemonic_from_entropy(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_mnemonic_from_random(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_mnemonic_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_network_mainnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_network_regtest(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_network_regtest_default(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_network_testnet(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_outpoint_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_precision_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_pset_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_script_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_secretkey_from_bytes(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_signer_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_signer_random(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_testenv_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_transaction_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_txbuilder_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_txid_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_update_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_wollet_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_wollet_with_custom_persister(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_lwk_checksum_constructor_wolletdescriptor_new(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_ffi_lwk_uniffi_contract_version(jsi::Runtime &rt,
                                                 const jsi::Value &thisVal,
                                                 const jsi::Value *args,
                                                 size_t count);
  jsi::Value cpp_uniffi_lwk_fn_init_callback_vtable_foreignpersister(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_address_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_addressresult_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_amp2_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_amp2descriptor_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_bip_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_contract_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_electrumclient_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_esploraclient_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_foreignpersister_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_internal_fn_method_foreignpersisterlink_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_issuance_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_mnemonic_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_network_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_outpoint_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_precision_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_pset_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_psetbalance_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_psetdetails_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_psetinput_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_psetsignatures_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_recipient_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_script_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_secretkey_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_signer_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_testenv_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_transaction_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_txbuilder_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_txin_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_txout_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_txoutsecrets_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_txid_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_update_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_wallettx_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_wallettxout_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_wollet_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_wolletdescriptor_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);

public:
  NativeLwk(jsi::Runtime &rt,
            std::shared_ptr<uniffi_runtime::UniffiCallInvoker> callInvoker);
  virtual ~NativeLwk();

  /**
   * The entry point into the crate.
   *
   * React Native must call `NativeLwk.registerModule(rt, callInvoker)` before
   * using the Javascript interface.
   */
  static void registerModule(jsi::Runtime &rt,
                             std::shared_ptr<react::CallInvoker> callInvoker);

  /**
   * Some cleanup into the crate goes here.
   *
   * Current implementation is empty, however, this is not guaranteed to always
   * be the case.
   *
   * Clients should call `NativeLwk.unregisterModule(rt)` after final use where
   * possible.
   */
  static void unregisterModule(jsi::Runtime &rt);

  virtual jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &name);
  virtual void set(jsi::Runtime &rt, const jsi::PropNameID &name,
                   const jsi::Value &value);
  virtual std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime &rt);
};